// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RPG.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RPG.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace RPG {

namespace {

const ::google::protobuf::Descriptor* player_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  player_reflection_ = NULL;
const ::google::protobuf::Descriptor* npc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  npc_reflection_ = NULL;
const ::google::protobuf::Descriptor* use_item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  use_item_reflection_ = NULL;
const ::google::protobuf::Descriptor* monster_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  monster_reflection_ = NULL;
const ::google::protobuf::Descriptor* equips_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  equips_reflection_ = NULL;
const ::google::protobuf::Descriptor* dungeon_setup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  dungeon_setup_reflection_ = NULL;
const ::google::protobuf::Descriptor* locations_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  locations_reflection_ = NULL;
const ::google::protobuf::Descriptor* story_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  story_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RPG_2eproto() {
  protobuf_AddDesc_RPG_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RPG.proto");
  GOOGLE_CHECK(file != NULL);
  player_descriptor_ = file->message_type(0);
  static const int player_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, race_class_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, health_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, max_health_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, dmg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, player_class_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, inventory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, equip_places_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, equip_places_value_),
  };
  player_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      player_descriptor_,
      player::default_instance_,
      player_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(player));
  npc_descriptor_ = file->message_type(1);
  static const int npc_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(npc, smith_items_to_buy_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(npc, smith_items_to_buy_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(npc, smith_items_to_sell_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(npc, smith_items_to_sell_value_),
  };
  npc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      npc_descriptor_,
      npc::default_instance_,
      npc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(npc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(npc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(npc));
  use_item_descriptor_ = file->message_type(2);
  static const int use_item_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(use_item, picked_potion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(use_item, wear_off_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(use_item, health_restores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(use_item, poisons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(use_item, temp_boosts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(use_item, perm_boosts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(use_item, misc_),
  };
  use_item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      use_item_descriptor_,
      use_item::default_instance_,
      use_item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(use_item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(use_item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(use_item));
  monster_descriptor_ = file->message_type(3);
  static const int monster_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monster, mon_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monster, mon_level_),
  };
  monster_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      monster_descriptor_,
      monster::default_instance_,
      monster_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monster, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monster, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(monster));
  equips_descriptor_ = file->message_type(4);
  static const int equips_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, h_head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, h_chest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, h_arm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, h_hand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, h_leg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, h_feet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, l_head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, l_chest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, l_arm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, l_hand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, l_leg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, l_feet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, a_head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, a_chest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, a_arm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, a_hand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, a_leg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, a_feet_),
  };
  equips_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      equips_descriptor_,
      equips::default_instance_,
      equips_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(equips, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(equips));
  dungeon_setup_descriptor_ = file->message_type(5);
  static const int dungeon_setup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dungeon_setup, isactive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dungeon_setup, room_count_),
  };
  dungeon_setup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      dungeon_setup_descriptor_,
      dungeon_setup::default_instance_,
      dungeon_setup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dungeon_setup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dungeon_setup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(dungeon_setup));
  locations_descriptor_ = file->message_type(6);
  static const int locations_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(locations, first_time_abon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(locations, first_time_mon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(locations, first_time_farm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(locations, first_time_boat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(locations, rand_house_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(locations, dot_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(locations, dot_stop_),
  };
  locations_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      locations_descriptor_,
      locations::default_instance_,
      locations_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(locations, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(locations, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(locations));
  story_descriptor_ = file->message_type(7);
  static const int story_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, progress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, back_story_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, event10_),
  };
  story_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      story_descriptor_,
      story::default_instance_,
      story_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(story, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(story));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RPG_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    player_descriptor_, &player::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    npc_descriptor_, &npc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    use_item_descriptor_, &use_item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    monster_descriptor_, &monster::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    equips_descriptor_, &equips::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    dungeon_setup_descriptor_, &dungeon_setup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    locations_descriptor_, &locations::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    story_descriptor_, &story::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RPG_2eproto() {
  delete player::default_instance_;
  delete player_reflection_;
  delete npc::default_instance_;
  delete npc_reflection_;
  delete use_item::default_instance_;
  delete use_item_reflection_;
  delete monster::default_instance_;
  delete monster_reflection_;
  delete equips::default_instance_;
  delete equips_reflection_;
  delete dungeon_setup::default_instance_;
  delete dungeon_setup_reflection_;
  delete locations::default_instance_;
  delete locations_reflection_;
  delete story::default_instance_;
  delete story_reflection_;
}

void protobuf_AddDesc_RPG_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tRPG.proto\022\003RPG\"\327\001\n\006player\022\r\n\005money\030\001 \002"
    "(\005\022\022\n\nrace_class\030\002 \002(\t\022\016\n\006health\030\003 \002(\005\022\022"
    "\n\nmax_health\030\004 \002(\005\022\013\n\003exp\030\005 \002(\005\022\r\n\005level"
    "\030\006 \002(\005\022\013\n\003dmg\030\007 \002(\005\022\024\n\014player_class\030\010 \002("
    "\t\022\021\n\tinventory\030\t \003(\t\022\030\n\020equip_places_key"
    "\030\n \003(\t\022\032\n\022equip_places_value\030\013 \003(\t\"\213\001\n\003n"
    "pc\022\036\n\026smith_items_to_buy_key\030\014 \003(\t\022 \n\030sm"
    "ith_items_to_buy_value\030\r \003(\005\022\037\n\027smith_it"
    "ems_to_sell_key\030\016 \003(\t\022!\n\031smith_items_to_"
    "sell_value\030\017 \003(\005\"\225\001\n\010use_item\022\025\n\rpicked_"
    "potion\030\020 \001(\t\022\020\n\010wear_off\030\021 \001(\005\022\027\n\017health"
    "_restores\030\022 \003(\t\022\017\n\007poisons\030\023 \003(\t\022\023\n\013temp"
    "_boosts\030\024 \003(\t\022\023\n\013perm_boosts\030\025 \003(\t\022\014\n\004mi"
    "sc\030\026 \003(\t\"/\n\007monster\022\021\n\tmon_count\030\027 \003(\t\022\021"
    "\n\tmon_level\030\030 \002(\005\"\245\002\n\006equips\022\016\n\006h_head\030\031"
    " \003(\t\022\017\n\007h_chest\030\032 \003(\t\022\r\n\005h_arm\030\033 \003(\t\022\016\n\006"
    "h_hand\030\034 \003(\t\022\r\n\005h_leg\030\035 \003(\t\022\016\n\006h_feet\030\036 "
    "\003(\t\022\016\n\006l_head\030\037 \003(\t\022\017\n\007l_chest\030  \003(\t\022\r\n\005"
    "l_arm\030! \003(\t\022\016\n\006l_hand\030\" \003(\t\022\r\n\005l_leg\030# \003"
    "(\t\022\016\n\006l_feet\030$ \003(\t\022\016\n\006a_head\030% \003(\t\022\017\n\007a_"
    "chest\030& \003(\t\022\r\n\005a_arm\030\' \003(\t\022\016\n\006a_hand\030( \003"
    "(\t\022\r\n\005a_leg\030) \003(\t\022\016\n\006a_feet\030* \003(\t\"5\n\rdun"
    "geon_setup\022\020\n\010isactive\030+ \001(\010\022\022\n\nroom_cou"
    "nt\030, \001(\005\"\254\001\n\tlocations\022\027\n\017first_time_abo"
    "n\030- \002(\010\022\026\n\016first_time_mon\030. \002(\010\022\027\n\017first"
    "_time_farm\030/ \002(\010\022\027\n\017first_time_boat\0300 \002("
    "\010\022\027\n\017rand_house_item\0301 \001(\t\022\021\n\tdot_count\030"
    "2 \001(\005\022\020\n\010dot_stop\0303 \001(\005\"\316\001\n\005story\022\020\n\010pro"
    "gress\0304 \002(\005\022\022\n\nback_story\0305 \002(\t\022\016\n\006event"
    "1\0306 \002(\t\022\016\n\006event2\0307 \002(\t\022\016\n\006event3\0308 \002(\t\022"
    "\016\n\006event4\0309 \002(\t\022\016\n\006event5\030: \002(\t\022\016\n\006event"
    "6\030; \002(\t\022\016\n\006event7\030< \002(\t\022\016\n\006event8\030= \002(\t\022"
    "\016\n\006event9\030> \002(\t\022\017\n\007event10\030\? \002(\t", 1312);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RPG.proto", &protobuf_RegisterTypes);
  player::default_instance_ = new player();
  npc::default_instance_ = new npc();
  use_item::default_instance_ = new use_item();
  monster::default_instance_ = new monster();
  equips::default_instance_ = new equips();
  dungeon_setup::default_instance_ = new dungeon_setup();
  locations::default_instance_ = new locations();
  story::default_instance_ = new story();
  player::default_instance_->InitAsDefaultInstance();
  npc::default_instance_->InitAsDefaultInstance();
  use_item::default_instance_->InitAsDefaultInstance();
  monster::default_instance_->InitAsDefaultInstance();
  equips::default_instance_->InitAsDefaultInstance();
  dungeon_setup::default_instance_->InitAsDefaultInstance();
  locations::default_instance_->InitAsDefaultInstance();
  story::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RPG_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RPG_2eproto {
  StaticDescriptorInitializer_RPG_2eproto() {
    protobuf_AddDesc_RPG_2eproto();
  }
} static_descriptor_initializer_RPG_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int player::kMoneyFieldNumber;
const int player::kRaceClassFieldNumber;
const int player::kHealthFieldNumber;
const int player::kMaxHealthFieldNumber;
const int player::kExpFieldNumber;
const int player::kLevelFieldNumber;
const int player::kDmgFieldNumber;
const int player::kPlayerClassFieldNumber;
const int player::kInventoryFieldNumber;
const int player::kEquipPlacesKeyFieldNumber;
const int player::kEquipPlacesValueFieldNumber;
#endif  // !_MSC_VER

player::player()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void player::InitAsDefaultInstance() {
}

player::player(const player& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void player::SharedCtor() {
  _cached_size_ = 0;
  money_ = 0;
  race_class_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  health_ = 0;
  max_health_ = 0;
  exp_ = 0;
  level_ = 0;
  dmg_ = 0;
  player_class_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

player::~player() {
  SharedDtor();
}

void player::SharedDtor() {
  if (race_class_ != &::google::protobuf::internal::kEmptyString) {
    delete race_class_;
  }
  if (player_class_ != &::google::protobuf::internal::kEmptyString) {
    delete player_class_;
  }
  if (this != default_instance_) {
  }
}

void player::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return player_descriptor_;
}

const player& player::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RPG_2eproto();
  return *default_instance_;
}

player* player::default_instance_ = NULL;

player* player::New() const {
  return new player;
}

void player::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    money_ = 0;
    if (has_race_class()) {
      if (race_class_ != &::google::protobuf::internal::kEmptyString) {
        race_class_->clear();
      }
    }
    health_ = 0;
    max_health_ = 0;
    exp_ = 0;
    level_ = 0;
    dmg_ = 0;
    if (has_player_class()) {
      if (player_class_ != &::google::protobuf::internal::kEmptyString) {
        player_class_->clear();
      }
    }
  }
  inventory_.Clear();
  equip_places_key_.Clear();
  equip_places_value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_race_class;
        break;
      }

      // required string race_class = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_race_class:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_race_class()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->race_class().data(), this->race_class().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_health;
        break;
      }

      // required int32 health = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_health:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_)));
          set_has_health();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_max_health;
        break;
      }

      // required int32 max_health = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_health:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_health_)));
          set_has_max_health();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_exp;
        break;
      }

      // required int32 exp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_level;
        break;
      }

      // required int32 level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_dmg;
        break;
      }

      // required int32 dmg = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dmg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dmg_)));
          set_has_dmg();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_player_class;
        break;
      }

      // required string player_class = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player_class:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_class()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->player_class().data(), this->player_class().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_inventory;
        break;
      }

      // repeated string inventory = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inventory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_inventory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inventory(this->inventory_size() - 1).data(),
            this->inventory(this->inventory_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_inventory;
        if (input->ExpectTag(82)) goto parse_equip_places_key;
        break;
      }

      // repeated string equip_places_key = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_places_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_equip_places_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->equip_places_key(this->equip_places_key_size() - 1).data(),
            this->equip_places_key(this->equip_places_key_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_equip_places_key;
        if (input->ExpectTag(90)) goto parse_equip_places_value;
        break;
      }

      // repeated string equip_places_value = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_places_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_equip_places_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->equip_places_value(this->equip_places_value_size() - 1).data(),
            this->equip_places_value(this->equip_places_value_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_equip_places_value;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 money = 1;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->money(), output);
  }

  // required string race_class = 2;
  if (has_race_class()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->race_class().data(), this->race_class().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->race_class(), output);
  }

  // required int32 health = 3;
  if (has_health()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->health(), output);
  }

  // required int32 max_health = 4;
  if (has_max_health()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_health(), output);
  }

  // required int32 exp = 5;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->exp(), output);
  }

  // required int32 level = 6;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->level(), output);
  }

  // required int32 dmg = 7;
  if (has_dmg()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->dmg(), output);
  }

  // required string player_class = 8;
  if (has_player_class()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_class().data(), this->player_class().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->player_class(), output);
  }

  // repeated string inventory = 9;
  for (int i = 0; i < this->inventory_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->inventory(i).data(), this->inventory(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->inventory(i), output);
  }

  // repeated string equip_places_key = 10;
  for (int i = 0; i < this->equip_places_key_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->equip_places_key(i).data(), this->equip_places_key(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->equip_places_key(i), output);
  }

  // repeated string equip_places_value = 11;
  for (int i = 0; i < this->equip_places_value_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->equip_places_value(i).data(), this->equip_places_value(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->equip_places_value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* player::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 money = 1;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->money(), target);
  }

  // required string race_class = 2;
  if (has_race_class()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->race_class().data(), this->race_class().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->race_class(), target);
  }

  // required int32 health = 3;
  if (has_health()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->health(), target);
  }

  // required int32 max_health = 4;
  if (has_max_health()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_health(), target);
  }

  // required int32 exp = 5;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->exp(), target);
  }

  // required int32 level = 6;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->level(), target);
  }

  // required int32 dmg = 7;
  if (has_dmg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->dmg(), target);
  }

  // required string player_class = 8;
  if (has_player_class()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_class().data(), this->player_class().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->player_class(), target);
  }

  // repeated string inventory = 9;
  for (int i = 0; i < this->inventory_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inventory(i).data(), this->inventory(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->inventory(i), target);
  }

  // repeated string equip_places_key = 10;
  for (int i = 0; i < this->equip_places_key_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->equip_places_key(i).data(), this->equip_places_key(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->equip_places_key(i), target);
  }

  // repeated string equip_places_value = 11;
  for (int i = 0; i < this->equip_places_value_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->equip_places_value(i).data(), this->equip_places_value(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->equip_places_value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int player::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 money = 1;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // required string race_class = 2;
    if (has_race_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->race_class());
    }

    // required int32 health = 3;
    if (has_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health());
    }

    // required int32 max_health = 4;
    if (has_max_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_health());
    }

    // required int32 exp = 5;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

    // required int32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required int32 dmg = 7;
    if (has_dmg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dmg());
    }

    // required string player_class = 8;
    if (has_player_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->player_class());
    }

  }
  // repeated string inventory = 9;
  total_size += 1 * this->inventory_size();
  for (int i = 0; i < this->inventory_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->inventory(i));
  }

  // repeated string equip_places_key = 10;
  total_size += 1 * this->equip_places_key_size();
  for (int i = 0; i < this->equip_places_key_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->equip_places_key(i));
  }

  // repeated string equip_places_value = 11;
  total_size += 1 * this->equip_places_value_size();
  for (int i = 0; i < this->equip_places_value_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->equip_places_value(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const player* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const player*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void player::MergeFrom(const player& from) {
  GOOGLE_CHECK_NE(&from, this);
  inventory_.MergeFrom(from.inventory_);
  equip_places_key_.MergeFrom(from.equip_places_key_);
  equip_places_value_.MergeFrom(from.equip_places_value_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_race_class()) {
      set_race_class(from.race_class());
    }
    if (from.has_health()) {
      set_health(from.health());
    }
    if (from.has_max_health()) {
      set_max_health(from.max_health());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_dmg()) {
      set_dmg(from.dmg());
    }
    if (from.has_player_class()) {
      set_player_class(from.player_class());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void player::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player::CopyFrom(const player& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void player::Swap(player* other) {
  if (other != this) {
    std::swap(money_, other->money_);
    std::swap(race_class_, other->race_class_);
    std::swap(health_, other->health_);
    std::swap(max_health_, other->max_health_);
    std::swap(exp_, other->exp_);
    std::swap(level_, other->level_);
    std::swap(dmg_, other->dmg_);
    std::swap(player_class_, other->player_class_);
    inventory_.Swap(&other->inventory_);
    equip_places_key_.Swap(&other->equip_places_key_);
    equip_places_value_.Swap(&other->equip_places_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata player::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = player_descriptor_;
  metadata.reflection = player_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int npc::kSmithItemsToBuyKeyFieldNumber;
const int npc::kSmithItemsToBuyValueFieldNumber;
const int npc::kSmithItemsToSellKeyFieldNumber;
const int npc::kSmithItemsToSellValueFieldNumber;
#endif  // !_MSC_VER

npc::npc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void npc::InitAsDefaultInstance() {
}

npc::npc(const npc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void npc::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

npc::~npc() {
  SharedDtor();
}

void npc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void npc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* npc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return npc_descriptor_;
}

const npc& npc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RPG_2eproto();
  return *default_instance_;
}

npc* npc::default_instance_ = NULL;

npc* npc::New() const {
  return new npc;
}

void npc::Clear() {
  smith_items_to_buy_key_.Clear();
  smith_items_to_buy_value_.Clear();
  smith_items_to_sell_key_.Clear();
  smith_items_to_sell_value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool npc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string smith_items_to_buy_key = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_smith_items_to_buy_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smith_items_to_buy_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->smith_items_to_buy_key(this->smith_items_to_buy_key_size() - 1).data(),
            this->smith_items_to_buy_key(this->smith_items_to_buy_key_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_smith_items_to_buy_key;
        if (input->ExpectTag(104)) goto parse_smith_items_to_buy_value;
        break;
      }

      // repeated int32 smith_items_to_buy_value = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_smith_items_to_buy_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 104, input, this->mutable_smith_items_to_buy_value())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_smith_items_to_buy_value())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_smith_items_to_buy_value;
        if (input->ExpectTag(114)) goto parse_smith_items_to_sell_key;
        break;
      }

      // repeated string smith_items_to_sell_key = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_smith_items_to_sell_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smith_items_to_sell_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->smith_items_to_sell_key(this->smith_items_to_sell_key_size() - 1).data(),
            this->smith_items_to_sell_key(this->smith_items_to_sell_key_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_smith_items_to_sell_key;
        if (input->ExpectTag(120)) goto parse_smith_items_to_sell_value;
        break;
      }

      // repeated int32 smith_items_to_sell_value = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_smith_items_to_sell_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 120, input, this->mutable_smith_items_to_sell_value())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_smith_items_to_sell_value())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_smith_items_to_sell_value;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void npc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string smith_items_to_buy_key = 12;
  for (int i = 0; i < this->smith_items_to_buy_key_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->smith_items_to_buy_key(i).data(), this->smith_items_to_buy_key(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->smith_items_to_buy_key(i), output);
  }

  // repeated int32 smith_items_to_buy_value = 13;
  for (int i = 0; i < this->smith_items_to_buy_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      13, this->smith_items_to_buy_value(i), output);
  }

  // repeated string smith_items_to_sell_key = 14;
  for (int i = 0; i < this->smith_items_to_sell_key_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->smith_items_to_sell_key(i).data(), this->smith_items_to_sell_key(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->smith_items_to_sell_key(i), output);
  }

  // repeated int32 smith_items_to_sell_value = 15;
  for (int i = 0; i < this->smith_items_to_sell_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      15, this->smith_items_to_sell_value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* npc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string smith_items_to_buy_key = 12;
  for (int i = 0; i < this->smith_items_to_buy_key_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->smith_items_to_buy_key(i).data(), this->smith_items_to_buy_key(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->smith_items_to_buy_key(i), target);
  }

  // repeated int32 smith_items_to_buy_value = 13;
  for (int i = 0; i < this->smith_items_to_buy_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(13, this->smith_items_to_buy_value(i), target);
  }

  // repeated string smith_items_to_sell_key = 14;
  for (int i = 0; i < this->smith_items_to_sell_key_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->smith_items_to_sell_key(i).data(), this->smith_items_to_sell_key(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->smith_items_to_sell_key(i), target);
  }

  // repeated int32 smith_items_to_sell_value = 15;
  for (int i = 0; i < this->smith_items_to_sell_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(15, this->smith_items_to_sell_value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int npc::ByteSize() const {
  int total_size = 0;

  // repeated string smith_items_to_buy_key = 12;
  total_size += 1 * this->smith_items_to_buy_key_size();
  for (int i = 0; i < this->smith_items_to_buy_key_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smith_items_to_buy_key(i));
  }

  // repeated int32 smith_items_to_buy_value = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->smith_items_to_buy_value_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->smith_items_to_buy_value(i));
    }
    total_size += 1 * this->smith_items_to_buy_value_size() + data_size;
  }

  // repeated string smith_items_to_sell_key = 14;
  total_size += 1 * this->smith_items_to_sell_key_size();
  for (int i = 0; i < this->smith_items_to_sell_key_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smith_items_to_sell_key(i));
  }

  // repeated int32 smith_items_to_sell_value = 15;
  {
    int data_size = 0;
    for (int i = 0; i < this->smith_items_to_sell_value_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->smith_items_to_sell_value(i));
    }
    total_size += 1 * this->smith_items_to_sell_value_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void npc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const npc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const npc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void npc::MergeFrom(const npc& from) {
  GOOGLE_CHECK_NE(&from, this);
  smith_items_to_buy_key_.MergeFrom(from.smith_items_to_buy_key_);
  smith_items_to_buy_value_.MergeFrom(from.smith_items_to_buy_value_);
  smith_items_to_sell_key_.MergeFrom(from.smith_items_to_sell_key_);
  smith_items_to_sell_value_.MergeFrom(from.smith_items_to_sell_value_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void npc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void npc::CopyFrom(const npc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool npc::IsInitialized() const {

  return true;
}

void npc::Swap(npc* other) {
  if (other != this) {
    smith_items_to_buy_key_.Swap(&other->smith_items_to_buy_key_);
    smith_items_to_buy_value_.Swap(&other->smith_items_to_buy_value_);
    smith_items_to_sell_key_.Swap(&other->smith_items_to_sell_key_);
    smith_items_to_sell_value_.Swap(&other->smith_items_to_sell_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata npc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = npc_descriptor_;
  metadata.reflection = npc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int use_item::kPickedPotionFieldNumber;
const int use_item::kWearOffFieldNumber;
const int use_item::kHealthRestoresFieldNumber;
const int use_item::kPoisonsFieldNumber;
const int use_item::kTempBoostsFieldNumber;
const int use_item::kPermBoostsFieldNumber;
const int use_item::kMiscFieldNumber;
#endif  // !_MSC_VER

use_item::use_item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void use_item::InitAsDefaultInstance() {
}

use_item::use_item(const use_item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void use_item::SharedCtor() {
  _cached_size_ = 0;
  picked_potion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  wear_off_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

use_item::~use_item() {
  SharedDtor();
}

void use_item::SharedDtor() {
  if (picked_potion_ != &::google::protobuf::internal::kEmptyString) {
    delete picked_potion_;
  }
  if (this != default_instance_) {
  }
}

void use_item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* use_item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return use_item_descriptor_;
}

const use_item& use_item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RPG_2eproto();
  return *default_instance_;
}

use_item* use_item::default_instance_ = NULL;

use_item* use_item::New() const {
  return new use_item;
}

void use_item::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_picked_potion()) {
      if (picked_potion_ != &::google::protobuf::internal::kEmptyString) {
        picked_potion_->clear();
      }
    }
    wear_off_ = 0;
  }
  health_restores_.Clear();
  poisons_.Clear();
  temp_boosts_.Clear();
  perm_boosts_.Clear();
  misc_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool use_item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string picked_potion = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picked_potion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->picked_potion().data(), this->picked_potion().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_wear_off;
        break;
      }

      // optional int32 wear_off = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wear_off:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wear_off_)));
          set_has_wear_off();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_health_restores;
        break;
      }

      // repeated string health_restores = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_health_restores:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_health_restores()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->health_restores(this->health_restores_size() - 1).data(),
            this->health_restores(this->health_restores_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_health_restores;
        if (input->ExpectTag(154)) goto parse_poisons;
        break;
      }

      // repeated string poisons = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_poisons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_poisons()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->poisons(this->poisons_size() - 1).data(),
            this->poisons(this->poisons_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_poisons;
        if (input->ExpectTag(162)) goto parse_temp_boosts;
        break;
      }

      // repeated string temp_boosts = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_temp_boosts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_temp_boosts()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->temp_boosts(this->temp_boosts_size() - 1).data(),
            this->temp_boosts(this->temp_boosts_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_temp_boosts;
        if (input->ExpectTag(170)) goto parse_perm_boosts;
        break;
      }

      // repeated string perm_boosts = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_perm_boosts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_perm_boosts()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->perm_boosts(this->perm_boosts_size() - 1).data(),
            this->perm_boosts(this->perm_boosts_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_perm_boosts;
        if (input->ExpectTag(178)) goto parse_misc;
        break;
      }

      // repeated string misc = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_misc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_misc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->misc(this->misc_size() - 1).data(),
            this->misc(this->misc_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_misc;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void use_item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string picked_potion = 16;
  if (has_picked_potion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->picked_potion().data(), this->picked_potion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->picked_potion(), output);
  }

  // optional int32 wear_off = 17;
  if (has_wear_off()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->wear_off(), output);
  }

  // repeated string health_restores = 18;
  for (int i = 0; i < this->health_restores_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->health_restores(i).data(), this->health_restores(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->health_restores(i), output);
  }

  // repeated string poisons = 19;
  for (int i = 0; i < this->poisons_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->poisons(i).data(), this->poisons(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->poisons(i), output);
  }

  // repeated string temp_boosts = 20;
  for (int i = 0; i < this->temp_boosts_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->temp_boosts(i).data(), this->temp_boosts(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->temp_boosts(i), output);
  }

  // repeated string perm_boosts = 21;
  for (int i = 0; i < this->perm_boosts_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->perm_boosts(i).data(), this->perm_boosts(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->perm_boosts(i), output);
  }

  // repeated string misc = 22;
  for (int i = 0; i < this->misc_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->misc(i).data(), this->misc(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->misc(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* use_item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string picked_potion = 16;
  if (has_picked_potion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->picked_potion().data(), this->picked_potion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->picked_potion(), target);
  }

  // optional int32 wear_off = 17;
  if (has_wear_off()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->wear_off(), target);
  }

  // repeated string health_restores = 18;
  for (int i = 0; i < this->health_restores_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->health_restores(i).data(), this->health_restores(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(18, this->health_restores(i), target);
  }

  // repeated string poisons = 19;
  for (int i = 0; i < this->poisons_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->poisons(i).data(), this->poisons(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(19, this->poisons(i), target);
  }

  // repeated string temp_boosts = 20;
  for (int i = 0; i < this->temp_boosts_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->temp_boosts(i).data(), this->temp_boosts(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(20, this->temp_boosts(i), target);
  }

  // repeated string perm_boosts = 21;
  for (int i = 0; i < this->perm_boosts_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->perm_boosts(i).data(), this->perm_boosts(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(21, this->perm_boosts(i), target);
  }

  // repeated string misc = 22;
  for (int i = 0; i < this->misc_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->misc(i).data(), this->misc(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(22, this->misc(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int use_item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string picked_potion = 16;
    if (has_picked_potion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->picked_potion());
    }

    // optional int32 wear_off = 17;
    if (has_wear_off()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wear_off());
    }

  }
  // repeated string health_restores = 18;
  total_size += 2 * this->health_restores_size();
  for (int i = 0; i < this->health_restores_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->health_restores(i));
  }

  // repeated string poisons = 19;
  total_size += 2 * this->poisons_size();
  for (int i = 0; i < this->poisons_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->poisons(i));
  }

  // repeated string temp_boosts = 20;
  total_size += 2 * this->temp_boosts_size();
  for (int i = 0; i < this->temp_boosts_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->temp_boosts(i));
  }

  // repeated string perm_boosts = 21;
  total_size += 2 * this->perm_boosts_size();
  for (int i = 0; i < this->perm_boosts_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->perm_boosts(i));
  }

  // repeated string misc = 22;
  total_size += 2 * this->misc_size();
  for (int i = 0; i < this->misc_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->misc(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void use_item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const use_item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const use_item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void use_item::MergeFrom(const use_item& from) {
  GOOGLE_CHECK_NE(&from, this);
  health_restores_.MergeFrom(from.health_restores_);
  poisons_.MergeFrom(from.poisons_);
  temp_boosts_.MergeFrom(from.temp_boosts_);
  perm_boosts_.MergeFrom(from.perm_boosts_);
  misc_.MergeFrom(from.misc_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_picked_potion()) {
      set_picked_potion(from.picked_potion());
    }
    if (from.has_wear_off()) {
      set_wear_off(from.wear_off());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void use_item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void use_item::CopyFrom(const use_item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool use_item::IsInitialized() const {

  return true;
}

void use_item::Swap(use_item* other) {
  if (other != this) {
    std::swap(picked_potion_, other->picked_potion_);
    std::swap(wear_off_, other->wear_off_);
    health_restores_.Swap(&other->health_restores_);
    poisons_.Swap(&other->poisons_);
    temp_boosts_.Swap(&other->temp_boosts_);
    perm_boosts_.Swap(&other->perm_boosts_);
    misc_.Swap(&other->misc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata use_item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = use_item_descriptor_;
  metadata.reflection = use_item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int monster::kMonCountFieldNumber;
const int monster::kMonLevelFieldNumber;
#endif  // !_MSC_VER

monster::monster()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void monster::InitAsDefaultInstance() {
}

monster::monster(const monster& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void monster::SharedCtor() {
  _cached_size_ = 0;
  mon_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

monster::~monster() {
  SharedDtor();
}

void monster::SharedDtor() {
  if (this != default_instance_) {
  }
}

void monster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* monster::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return monster_descriptor_;
}

const monster& monster::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RPG_2eproto();
  return *default_instance_;
}

monster* monster::default_instance_ = NULL;

monster* monster::New() const {
  return new monster;
}

void monster::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    mon_level_ = 0;
  }
  mon_count_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool monster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string mon_count = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mon_count:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mon_count()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mon_count(this->mon_count_size() - 1).data(),
            this->mon_count(this->mon_count_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_mon_count;
        if (input->ExpectTag(192)) goto parse_mon_level;
        break;
      }

      // required int32 mon_level = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mon_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mon_level_)));
          set_has_mon_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void monster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string mon_count = 23;
  for (int i = 0; i < this->mon_count_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->mon_count(i).data(), this->mon_count(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->mon_count(i), output);
  }

  // required int32 mon_level = 24;
  if (has_mon_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->mon_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* monster::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string mon_count = 23;
  for (int i = 0; i < this->mon_count_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mon_count(i).data(), this->mon_count(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(23, this->mon_count(i), target);
  }

  // required int32 mon_level = 24;
  if (has_mon_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->mon_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int monster::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required int32 mon_level = 24;
    if (has_mon_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mon_level());
    }

  }
  // repeated string mon_count = 23;
  total_size += 2 * this->mon_count_size();
  for (int i = 0; i < this->mon_count_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mon_count(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void monster::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const monster* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const monster*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void monster::MergeFrom(const monster& from) {
  GOOGLE_CHECK_NE(&from, this);
  mon_count_.MergeFrom(from.mon_count_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_mon_level()) {
      set_mon_level(from.mon_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void monster::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void monster::CopyFrom(const monster& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool monster::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void monster::Swap(monster* other) {
  if (other != this) {
    mon_count_.Swap(&other->mon_count_);
    std::swap(mon_level_, other->mon_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata monster::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = monster_descriptor_;
  metadata.reflection = monster_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int equips::kHHeadFieldNumber;
const int equips::kHChestFieldNumber;
const int equips::kHArmFieldNumber;
const int equips::kHHandFieldNumber;
const int equips::kHLegFieldNumber;
const int equips::kHFeetFieldNumber;
const int equips::kLHeadFieldNumber;
const int equips::kLChestFieldNumber;
const int equips::kLArmFieldNumber;
const int equips::kLHandFieldNumber;
const int equips::kLLegFieldNumber;
const int equips::kLFeetFieldNumber;
const int equips::kAHeadFieldNumber;
const int equips::kAChestFieldNumber;
const int equips::kAArmFieldNumber;
const int equips::kAHandFieldNumber;
const int equips::kALegFieldNumber;
const int equips::kAFeetFieldNumber;
#endif  // !_MSC_VER

equips::equips()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void equips::InitAsDefaultInstance() {
}

equips::equips(const equips& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void equips::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

equips::~equips() {
  SharedDtor();
}

void equips::SharedDtor() {
  if (this != default_instance_) {
  }
}

void equips::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* equips::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return equips_descriptor_;
}

const equips& equips::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RPG_2eproto();
  return *default_instance_;
}

equips* equips::default_instance_ = NULL;

equips* equips::New() const {
  return new equips;
}

void equips::Clear() {
  h_head_.Clear();
  h_chest_.Clear();
  h_arm_.Clear();
  h_hand_.Clear();
  h_leg_.Clear();
  h_feet_.Clear();
  l_head_.Clear();
  l_chest_.Clear();
  l_arm_.Clear();
  l_hand_.Clear();
  l_leg_.Clear();
  l_feet_.Clear();
  a_head_.Clear();
  a_chest_.Clear();
  a_arm_.Clear();
  a_hand_.Clear();
  a_leg_.Clear();
  a_feet_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool equips::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string h_head = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_h_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_h_head()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->h_head(this->h_head_size() - 1).data(),
            this->h_head(this->h_head_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_h_head;
        if (input->ExpectTag(210)) goto parse_h_chest;
        break;
      }

      // repeated string h_chest = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_h_chest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_h_chest()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->h_chest(this->h_chest_size() - 1).data(),
            this->h_chest(this->h_chest_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_h_chest;
        if (input->ExpectTag(218)) goto parse_h_arm;
        break;
      }

      // repeated string h_arm = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_h_arm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_h_arm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->h_arm(this->h_arm_size() - 1).data(),
            this->h_arm(this->h_arm_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_h_arm;
        if (input->ExpectTag(226)) goto parse_h_hand;
        break;
      }

      // repeated string h_hand = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_h_hand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_h_hand()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->h_hand(this->h_hand_size() - 1).data(),
            this->h_hand(this->h_hand_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_h_hand;
        if (input->ExpectTag(234)) goto parse_h_leg;
        break;
      }

      // repeated string h_leg = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_h_leg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_h_leg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->h_leg(this->h_leg_size() - 1).data(),
            this->h_leg(this->h_leg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_h_leg;
        if (input->ExpectTag(242)) goto parse_h_feet;
        break;
      }

      // repeated string h_feet = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_h_feet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_h_feet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->h_feet(this->h_feet_size() - 1).data(),
            this->h_feet(this->h_feet_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_h_feet;
        if (input->ExpectTag(250)) goto parse_l_head;
        break;
      }

      // repeated string l_head = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_l_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_l_head()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->l_head(this->l_head_size() - 1).data(),
            this->l_head(this->l_head_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_l_head;
        if (input->ExpectTag(258)) goto parse_l_chest;
        break;
      }

      // repeated string l_chest = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_l_chest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_l_chest()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->l_chest(this->l_chest_size() - 1).data(),
            this->l_chest(this->l_chest_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(258)) goto parse_l_chest;
        if (input->ExpectTag(266)) goto parse_l_arm;
        break;
      }

      // repeated string l_arm = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_l_arm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_l_arm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->l_arm(this->l_arm_size() - 1).data(),
            this->l_arm(this->l_arm_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(266)) goto parse_l_arm;
        if (input->ExpectTag(274)) goto parse_l_hand;
        break;
      }

      // repeated string l_hand = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_l_hand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_l_hand()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->l_hand(this->l_hand_size() - 1).data(),
            this->l_hand(this->l_hand_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(274)) goto parse_l_hand;
        if (input->ExpectTag(282)) goto parse_l_leg;
        break;
      }

      // repeated string l_leg = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_l_leg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_l_leg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->l_leg(this->l_leg_size() - 1).data(),
            this->l_leg(this->l_leg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(282)) goto parse_l_leg;
        if (input->ExpectTag(290)) goto parse_l_feet;
        break;
      }

      // repeated string l_feet = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_l_feet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_l_feet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->l_feet(this->l_feet_size() - 1).data(),
            this->l_feet(this->l_feet_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_l_feet;
        if (input->ExpectTag(298)) goto parse_a_head;
        break;
      }

      // repeated string a_head = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_a_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_a_head()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->a_head(this->a_head_size() - 1).data(),
            this->a_head(this->a_head_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(298)) goto parse_a_head;
        if (input->ExpectTag(306)) goto parse_a_chest;
        break;
      }

      // repeated string a_chest = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_a_chest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_a_chest()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->a_chest(this->a_chest_size() - 1).data(),
            this->a_chest(this->a_chest_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(306)) goto parse_a_chest;
        if (input->ExpectTag(314)) goto parse_a_arm;
        break;
      }

      // repeated string a_arm = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_a_arm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_a_arm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->a_arm(this->a_arm_size() - 1).data(),
            this->a_arm(this->a_arm_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(314)) goto parse_a_arm;
        if (input->ExpectTag(322)) goto parse_a_hand;
        break;
      }

      // repeated string a_hand = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_a_hand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_a_hand()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->a_hand(this->a_hand_size() - 1).data(),
            this->a_hand(this->a_hand_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(322)) goto parse_a_hand;
        if (input->ExpectTag(330)) goto parse_a_leg;
        break;
      }

      // repeated string a_leg = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_a_leg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_a_leg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->a_leg(this->a_leg_size() - 1).data(),
            this->a_leg(this->a_leg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(330)) goto parse_a_leg;
        if (input->ExpectTag(338)) goto parse_a_feet;
        break;
      }

      // repeated string a_feet = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_a_feet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_a_feet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->a_feet(this->a_feet_size() - 1).data(),
            this->a_feet(this->a_feet_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(338)) goto parse_a_feet;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void equips::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string h_head = 25;
  for (int i = 0; i < this->h_head_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->h_head(i).data(), this->h_head(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->h_head(i), output);
  }

  // repeated string h_chest = 26;
  for (int i = 0; i < this->h_chest_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->h_chest(i).data(), this->h_chest(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->h_chest(i), output);
  }

  // repeated string h_arm = 27;
  for (int i = 0; i < this->h_arm_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->h_arm(i).data(), this->h_arm(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->h_arm(i), output);
  }

  // repeated string h_hand = 28;
  for (int i = 0; i < this->h_hand_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->h_hand(i).data(), this->h_hand(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->h_hand(i), output);
  }

  // repeated string h_leg = 29;
  for (int i = 0; i < this->h_leg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->h_leg(i).data(), this->h_leg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->h_leg(i), output);
  }

  // repeated string h_feet = 30;
  for (int i = 0; i < this->h_feet_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->h_feet(i).data(), this->h_feet(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->h_feet(i), output);
  }

  // repeated string l_head = 31;
  for (int i = 0; i < this->l_head_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->l_head(i).data(), this->l_head(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->l_head(i), output);
  }

  // repeated string l_chest = 32;
  for (int i = 0; i < this->l_chest_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->l_chest(i).data(), this->l_chest(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      32, this->l_chest(i), output);
  }

  // repeated string l_arm = 33;
  for (int i = 0; i < this->l_arm_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->l_arm(i).data(), this->l_arm(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      33, this->l_arm(i), output);
  }

  // repeated string l_hand = 34;
  for (int i = 0; i < this->l_hand_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->l_hand(i).data(), this->l_hand(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      34, this->l_hand(i), output);
  }

  // repeated string l_leg = 35;
  for (int i = 0; i < this->l_leg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->l_leg(i).data(), this->l_leg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      35, this->l_leg(i), output);
  }

  // repeated string l_feet = 36;
  for (int i = 0; i < this->l_feet_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->l_feet(i).data(), this->l_feet(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      36, this->l_feet(i), output);
  }

  // repeated string a_head = 37;
  for (int i = 0; i < this->a_head_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->a_head(i).data(), this->a_head(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      37, this->a_head(i), output);
  }

  // repeated string a_chest = 38;
  for (int i = 0; i < this->a_chest_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->a_chest(i).data(), this->a_chest(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      38, this->a_chest(i), output);
  }

  // repeated string a_arm = 39;
  for (int i = 0; i < this->a_arm_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->a_arm(i).data(), this->a_arm(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      39, this->a_arm(i), output);
  }

  // repeated string a_hand = 40;
  for (int i = 0; i < this->a_hand_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->a_hand(i).data(), this->a_hand(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      40, this->a_hand(i), output);
  }

  // repeated string a_leg = 41;
  for (int i = 0; i < this->a_leg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->a_leg(i).data(), this->a_leg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      41, this->a_leg(i), output);
  }

  // repeated string a_feet = 42;
  for (int i = 0; i < this->a_feet_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->a_feet(i).data(), this->a_feet(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      42, this->a_feet(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* equips::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string h_head = 25;
  for (int i = 0; i < this->h_head_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->h_head(i).data(), this->h_head(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(25, this->h_head(i), target);
  }

  // repeated string h_chest = 26;
  for (int i = 0; i < this->h_chest_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->h_chest(i).data(), this->h_chest(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(26, this->h_chest(i), target);
  }

  // repeated string h_arm = 27;
  for (int i = 0; i < this->h_arm_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->h_arm(i).data(), this->h_arm(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(27, this->h_arm(i), target);
  }

  // repeated string h_hand = 28;
  for (int i = 0; i < this->h_hand_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->h_hand(i).data(), this->h_hand(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(28, this->h_hand(i), target);
  }

  // repeated string h_leg = 29;
  for (int i = 0; i < this->h_leg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->h_leg(i).data(), this->h_leg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(29, this->h_leg(i), target);
  }

  // repeated string h_feet = 30;
  for (int i = 0; i < this->h_feet_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->h_feet(i).data(), this->h_feet(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(30, this->h_feet(i), target);
  }

  // repeated string l_head = 31;
  for (int i = 0; i < this->l_head_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->l_head(i).data(), this->l_head(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(31, this->l_head(i), target);
  }

  // repeated string l_chest = 32;
  for (int i = 0; i < this->l_chest_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->l_chest(i).data(), this->l_chest(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(32, this->l_chest(i), target);
  }

  // repeated string l_arm = 33;
  for (int i = 0; i < this->l_arm_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->l_arm(i).data(), this->l_arm(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(33, this->l_arm(i), target);
  }

  // repeated string l_hand = 34;
  for (int i = 0; i < this->l_hand_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->l_hand(i).data(), this->l_hand(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(34, this->l_hand(i), target);
  }

  // repeated string l_leg = 35;
  for (int i = 0; i < this->l_leg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->l_leg(i).data(), this->l_leg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(35, this->l_leg(i), target);
  }

  // repeated string l_feet = 36;
  for (int i = 0; i < this->l_feet_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->l_feet(i).data(), this->l_feet(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(36, this->l_feet(i), target);
  }

  // repeated string a_head = 37;
  for (int i = 0; i < this->a_head_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->a_head(i).data(), this->a_head(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(37, this->a_head(i), target);
  }

  // repeated string a_chest = 38;
  for (int i = 0; i < this->a_chest_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->a_chest(i).data(), this->a_chest(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(38, this->a_chest(i), target);
  }

  // repeated string a_arm = 39;
  for (int i = 0; i < this->a_arm_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->a_arm(i).data(), this->a_arm(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(39, this->a_arm(i), target);
  }

  // repeated string a_hand = 40;
  for (int i = 0; i < this->a_hand_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->a_hand(i).data(), this->a_hand(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(40, this->a_hand(i), target);
  }

  // repeated string a_leg = 41;
  for (int i = 0; i < this->a_leg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->a_leg(i).data(), this->a_leg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(41, this->a_leg(i), target);
  }

  // repeated string a_feet = 42;
  for (int i = 0; i < this->a_feet_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->a_feet(i).data(), this->a_feet(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(42, this->a_feet(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int equips::ByteSize() const {
  int total_size = 0;

  // repeated string h_head = 25;
  total_size += 2 * this->h_head_size();
  for (int i = 0; i < this->h_head_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->h_head(i));
  }

  // repeated string h_chest = 26;
  total_size += 2 * this->h_chest_size();
  for (int i = 0; i < this->h_chest_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->h_chest(i));
  }

  // repeated string h_arm = 27;
  total_size += 2 * this->h_arm_size();
  for (int i = 0; i < this->h_arm_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->h_arm(i));
  }

  // repeated string h_hand = 28;
  total_size += 2 * this->h_hand_size();
  for (int i = 0; i < this->h_hand_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->h_hand(i));
  }

  // repeated string h_leg = 29;
  total_size += 2 * this->h_leg_size();
  for (int i = 0; i < this->h_leg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->h_leg(i));
  }

  // repeated string h_feet = 30;
  total_size += 2 * this->h_feet_size();
  for (int i = 0; i < this->h_feet_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->h_feet(i));
  }

  // repeated string l_head = 31;
  total_size += 2 * this->l_head_size();
  for (int i = 0; i < this->l_head_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->l_head(i));
  }

  // repeated string l_chest = 32;
  total_size += 2 * this->l_chest_size();
  for (int i = 0; i < this->l_chest_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->l_chest(i));
  }

  // repeated string l_arm = 33;
  total_size += 2 * this->l_arm_size();
  for (int i = 0; i < this->l_arm_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->l_arm(i));
  }

  // repeated string l_hand = 34;
  total_size += 2 * this->l_hand_size();
  for (int i = 0; i < this->l_hand_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->l_hand(i));
  }

  // repeated string l_leg = 35;
  total_size += 2 * this->l_leg_size();
  for (int i = 0; i < this->l_leg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->l_leg(i));
  }

  // repeated string l_feet = 36;
  total_size += 2 * this->l_feet_size();
  for (int i = 0; i < this->l_feet_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->l_feet(i));
  }

  // repeated string a_head = 37;
  total_size += 2 * this->a_head_size();
  for (int i = 0; i < this->a_head_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->a_head(i));
  }

  // repeated string a_chest = 38;
  total_size += 2 * this->a_chest_size();
  for (int i = 0; i < this->a_chest_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->a_chest(i));
  }

  // repeated string a_arm = 39;
  total_size += 2 * this->a_arm_size();
  for (int i = 0; i < this->a_arm_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->a_arm(i));
  }

  // repeated string a_hand = 40;
  total_size += 2 * this->a_hand_size();
  for (int i = 0; i < this->a_hand_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->a_hand(i));
  }

  // repeated string a_leg = 41;
  total_size += 2 * this->a_leg_size();
  for (int i = 0; i < this->a_leg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->a_leg(i));
  }

  // repeated string a_feet = 42;
  total_size += 2 * this->a_feet_size();
  for (int i = 0; i < this->a_feet_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->a_feet(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void equips::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const equips* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const equips*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void equips::MergeFrom(const equips& from) {
  GOOGLE_CHECK_NE(&from, this);
  h_head_.MergeFrom(from.h_head_);
  h_chest_.MergeFrom(from.h_chest_);
  h_arm_.MergeFrom(from.h_arm_);
  h_hand_.MergeFrom(from.h_hand_);
  h_leg_.MergeFrom(from.h_leg_);
  h_feet_.MergeFrom(from.h_feet_);
  l_head_.MergeFrom(from.l_head_);
  l_chest_.MergeFrom(from.l_chest_);
  l_arm_.MergeFrom(from.l_arm_);
  l_hand_.MergeFrom(from.l_hand_);
  l_leg_.MergeFrom(from.l_leg_);
  l_feet_.MergeFrom(from.l_feet_);
  a_head_.MergeFrom(from.a_head_);
  a_chest_.MergeFrom(from.a_chest_);
  a_arm_.MergeFrom(from.a_arm_);
  a_hand_.MergeFrom(from.a_hand_);
  a_leg_.MergeFrom(from.a_leg_);
  a_feet_.MergeFrom(from.a_feet_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void equips::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void equips::CopyFrom(const equips& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool equips::IsInitialized() const {

  return true;
}

void equips::Swap(equips* other) {
  if (other != this) {
    h_head_.Swap(&other->h_head_);
    h_chest_.Swap(&other->h_chest_);
    h_arm_.Swap(&other->h_arm_);
    h_hand_.Swap(&other->h_hand_);
    h_leg_.Swap(&other->h_leg_);
    h_feet_.Swap(&other->h_feet_);
    l_head_.Swap(&other->l_head_);
    l_chest_.Swap(&other->l_chest_);
    l_arm_.Swap(&other->l_arm_);
    l_hand_.Swap(&other->l_hand_);
    l_leg_.Swap(&other->l_leg_);
    l_feet_.Swap(&other->l_feet_);
    a_head_.Swap(&other->a_head_);
    a_chest_.Swap(&other->a_chest_);
    a_arm_.Swap(&other->a_arm_);
    a_hand_.Swap(&other->a_hand_);
    a_leg_.Swap(&other->a_leg_);
    a_feet_.Swap(&other->a_feet_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata equips::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = equips_descriptor_;
  metadata.reflection = equips_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int dungeon_setup::kIsactiveFieldNumber;
const int dungeon_setup::kRoomCountFieldNumber;
#endif  // !_MSC_VER

dungeon_setup::dungeon_setup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void dungeon_setup::InitAsDefaultInstance() {
}

dungeon_setup::dungeon_setup(const dungeon_setup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void dungeon_setup::SharedCtor() {
  _cached_size_ = 0;
  isactive_ = false;
  room_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

dungeon_setup::~dungeon_setup() {
  SharedDtor();
}

void dungeon_setup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void dungeon_setup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* dungeon_setup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return dungeon_setup_descriptor_;
}

const dungeon_setup& dungeon_setup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RPG_2eproto();
  return *default_instance_;
}

dungeon_setup* dungeon_setup::default_instance_ = NULL;

dungeon_setup* dungeon_setup::New() const {
  return new dungeon_setup;
}

void dungeon_setup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    isactive_ = false;
    room_count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool dungeon_setup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool isactive = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isactive_)));
          set_has_isactive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(352)) goto parse_room_count;
        break;
      }

      // optional int32 room_count = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_room_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_count_)));
          set_has_room_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void dungeon_setup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool isactive = 43;
  if (has_isactive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(43, this->isactive(), output);
  }

  // optional int32 room_count = 44;
  if (has_room_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(44, this->room_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* dungeon_setup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool isactive = 43;
  if (has_isactive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(43, this->isactive(), target);
  }

  // optional int32 room_count = 44;
  if (has_room_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(44, this->room_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int dungeon_setup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool isactive = 43;
    if (has_isactive()) {
      total_size += 2 + 1;
    }

    // optional int32 room_count = 44;
    if (has_room_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void dungeon_setup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const dungeon_setup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const dungeon_setup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void dungeon_setup::MergeFrom(const dungeon_setup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isactive()) {
      set_isactive(from.isactive());
    }
    if (from.has_room_count()) {
      set_room_count(from.room_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void dungeon_setup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dungeon_setup::CopyFrom(const dungeon_setup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dungeon_setup::IsInitialized() const {

  return true;
}

void dungeon_setup::Swap(dungeon_setup* other) {
  if (other != this) {
    std::swap(isactive_, other->isactive_);
    std::swap(room_count_, other->room_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata dungeon_setup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = dungeon_setup_descriptor_;
  metadata.reflection = dungeon_setup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int locations::kFirstTimeAbonFieldNumber;
const int locations::kFirstTimeMonFieldNumber;
const int locations::kFirstTimeFarmFieldNumber;
const int locations::kFirstTimeBoatFieldNumber;
const int locations::kRandHouseItemFieldNumber;
const int locations::kDotCountFieldNumber;
const int locations::kDotStopFieldNumber;
#endif  // !_MSC_VER

locations::locations()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void locations::InitAsDefaultInstance() {
}

locations::locations(const locations& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void locations::SharedCtor() {
  _cached_size_ = 0;
  first_time_abon_ = false;
  first_time_mon_ = false;
  first_time_farm_ = false;
  first_time_boat_ = false;
  rand_house_item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dot_count_ = 0;
  dot_stop_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

locations::~locations() {
  SharedDtor();
}

void locations::SharedDtor() {
  if (rand_house_item_ != &::google::protobuf::internal::kEmptyString) {
    delete rand_house_item_;
  }
  if (this != default_instance_) {
  }
}

void locations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* locations::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return locations_descriptor_;
}

const locations& locations::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RPG_2eproto();
  return *default_instance_;
}

locations* locations::default_instance_ = NULL;

locations* locations::New() const {
  return new locations;
}

void locations::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_time_abon_ = false;
    first_time_mon_ = false;
    first_time_farm_ = false;
    first_time_boat_ = false;
    if (has_rand_house_item()) {
      if (rand_house_item_ != &::google::protobuf::internal::kEmptyString) {
        rand_house_item_->clear();
      }
    }
    dot_count_ = 0;
    dot_stop_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool locations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool first_time_abon = 45;
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_time_abon_)));
          set_has_first_time_abon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(368)) goto parse_first_time_mon;
        break;
      }

      // required bool first_time_mon = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_time_mon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_time_mon_)));
          set_has_first_time_mon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(376)) goto parse_first_time_farm;
        break;
      }

      // required bool first_time_farm = 47;
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_time_farm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_time_farm_)));
          set_has_first_time_farm();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(384)) goto parse_first_time_boat;
        break;
      }

      // required bool first_time_boat = 48;
      case 48: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_time_boat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_time_boat_)));
          set_has_first_time_boat();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(394)) goto parse_rand_house_item;
        break;
      }

      // optional string rand_house_item = 49;
      case 49: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rand_house_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rand_house_item()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rand_house_item().data(), this->rand_house_item().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(400)) goto parse_dot_count;
        break;
      }

      // optional int32 dot_count = 50;
      case 50: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dot_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dot_count_)));
          set_has_dot_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(408)) goto parse_dot_stop;
        break;
      }

      // optional int32 dot_stop = 51;
      case 51: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dot_stop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dot_stop_)));
          set_has_dot_stop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void locations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool first_time_abon = 45;
  if (has_first_time_abon()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(45, this->first_time_abon(), output);
  }

  // required bool first_time_mon = 46;
  if (has_first_time_mon()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(46, this->first_time_mon(), output);
  }

  // required bool first_time_farm = 47;
  if (has_first_time_farm()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(47, this->first_time_farm(), output);
  }

  // required bool first_time_boat = 48;
  if (has_first_time_boat()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(48, this->first_time_boat(), output);
  }

  // optional string rand_house_item = 49;
  if (has_rand_house_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rand_house_item().data(), this->rand_house_item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      49, this->rand_house_item(), output);
  }

  // optional int32 dot_count = 50;
  if (has_dot_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->dot_count(), output);
  }

  // optional int32 dot_stop = 51;
  if (has_dot_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(51, this->dot_stop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* locations::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool first_time_abon = 45;
  if (has_first_time_abon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(45, this->first_time_abon(), target);
  }

  // required bool first_time_mon = 46;
  if (has_first_time_mon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(46, this->first_time_mon(), target);
  }

  // required bool first_time_farm = 47;
  if (has_first_time_farm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(47, this->first_time_farm(), target);
  }

  // required bool first_time_boat = 48;
  if (has_first_time_boat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(48, this->first_time_boat(), target);
  }

  // optional string rand_house_item = 49;
  if (has_rand_house_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rand_house_item().data(), this->rand_house_item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        49, this->rand_house_item(), target);
  }

  // optional int32 dot_count = 50;
  if (has_dot_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->dot_count(), target);
  }

  // optional int32 dot_stop = 51;
  if (has_dot_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(51, this->dot_stop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int locations::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool first_time_abon = 45;
    if (has_first_time_abon()) {
      total_size += 2 + 1;
    }

    // required bool first_time_mon = 46;
    if (has_first_time_mon()) {
      total_size += 2 + 1;
    }

    // required bool first_time_farm = 47;
    if (has_first_time_farm()) {
      total_size += 2 + 1;
    }

    // required bool first_time_boat = 48;
    if (has_first_time_boat()) {
      total_size += 2 + 1;
    }

    // optional string rand_house_item = 49;
    if (has_rand_house_item()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rand_house_item());
    }

    // optional int32 dot_count = 50;
    if (has_dot_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dot_count());
    }

    // optional int32 dot_stop = 51;
    if (has_dot_stop()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dot_stop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void locations::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const locations* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const locations*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void locations::MergeFrom(const locations& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_time_abon()) {
      set_first_time_abon(from.first_time_abon());
    }
    if (from.has_first_time_mon()) {
      set_first_time_mon(from.first_time_mon());
    }
    if (from.has_first_time_farm()) {
      set_first_time_farm(from.first_time_farm());
    }
    if (from.has_first_time_boat()) {
      set_first_time_boat(from.first_time_boat());
    }
    if (from.has_rand_house_item()) {
      set_rand_house_item(from.rand_house_item());
    }
    if (from.has_dot_count()) {
      set_dot_count(from.dot_count());
    }
    if (from.has_dot_stop()) {
      set_dot_stop(from.dot_stop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void locations::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void locations::CopyFrom(const locations& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool locations::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void locations::Swap(locations* other) {
  if (other != this) {
    std::swap(first_time_abon_, other->first_time_abon_);
    std::swap(first_time_mon_, other->first_time_mon_);
    std::swap(first_time_farm_, other->first_time_farm_);
    std::swap(first_time_boat_, other->first_time_boat_);
    std::swap(rand_house_item_, other->rand_house_item_);
    std::swap(dot_count_, other->dot_count_);
    std::swap(dot_stop_, other->dot_stop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata locations::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = locations_descriptor_;
  metadata.reflection = locations_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int story::kProgressFieldNumber;
const int story::kBackStoryFieldNumber;
const int story::kEvent1FieldNumber;
const int story::kEvent2FieldNumber;
const int story::kEvent3FieldNumber;
const int story::kEvent4FieldNumber;
const int story::kEvent5FieldNumber;
const int story::kEvent6FieldNumber;
const int story::kEvent7FieldNumber;
const int story::kEvent8FieldNumber;
const int story::kEvent9FieldNumber;
const int story::kEvent10FieldNumber;
#endif  // !_MSC_VER

story::story()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void story::InitAsDefaultInstance() {
}

story::story(const story& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void story::SharedCtor() {
  _cached_size_ = 0;
  progress_ = 0;
  back_story_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event4_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event7_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event8_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  event10_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

story::~story() {
  SharedDtor();
}

void story::SharedDtor() {
  if (back_story_ != &::google::protobuf::internal::kEmptyString) {
    delete back_story_;
  }
  if (event1_ != &::google::protobuf::internal::kEmptyString) {
    delete event1_;
  }
  if (event2_ != &::google::protobuf::internal::kEmptyString) {
    delete event2_;
  }
  if (event3_ != &::google::protobuf::internal::kEmptyString) {
    delete event3_;
  }
  if (event4_ != &::google::protobuf::internal::kEmptyString) {
    delete event4_;
  }
  if (event5_ != &::google::protobuf::internal::kEmptyString) {
    delete event5_;
  }
  if (event6_ != &::google::protobuf::internal::kEmptyString) {
    delete event6_;
  }
  if (event7_ != &::google::protobuf::internal::kEmptyString) {
    delete event7_;
  }
  if (event8_ != &::google::protobuf::internal::kEmptyString) {
    delete event8_;
  }
  if (event9_ != &::google::protobuf::internal::kEmptyString) {
    delete event9_;
  }
  if (event10_ != &::google::protobuf::internal::kEmptyString) {
    delete event10_;
  }
  if (this != default_instance_) {
  }
}

void story::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* story::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return story_descriptor_;
}

const story& story::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RPG_2eproto();
  return *default_instance_;
}

story* story::default_instance_ = NULL;

story* story::New() const {
  return new story;
}

void story::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    progress_ = 0;
    if (has_back_story()) {
      if (back_story_ != &::google::protobuf::internal::kEmptyString) {
        back_story_->clear();
      }
    }
    if (has_event1()) {
      if (event1_ != &::google::protobuf::internal::kEmptyString) {
        event1_->clear();
      }
    }
    if (has_event2()) {
      if (event2_ != &::google::protobuf::internal::kEmptyString) {
        event2_->clear();
      }
    }
    if (has_event3()) {
      if (event3_ != &::google::protobuf::internal::kEmptyString) {
        event3_->clear();
      }
    }
    if (has_event4()) {
      if (event4_ != &::google::protobuf::internal::kEmptyString) {
        event4_->clear();
      }
    }
    if (has_event5()) {
      if (event5_ != &::google::protobuf::internal::kEmptyString) {
        event5_->clear();
      }
    }
    if (has_event6()) {
      if (event6_ != &::google::protobuf::internal::kEmptyString) {
        event6_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_event7()) {
      if (event7_ != &::google::protobuf::internal::kEmptyString) {
        event7_->clear();
      }
    }
    if (has_event8()) {
      if (event8_ != &::google::protobuf::internal::kEmptyString) {
        event8_->clear();
      }
    }
    if (has_event9()) {
      if (event9_ != &::google::protobuf::internal::kEmptyString) {
        event9_->clear();
      }
    }
    if (has_event10()) {
      if (event10_ != &::google::protobuf::internal::kEmptyString) {
        event10_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool story::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 progress = 52;
      case 52: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &progress_)));
          set_has_progress();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(426)) goto parse_back_story;
        break;
      }

      // required string back_story = 53;
      case 53: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_back_story:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_back_story()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->back_story().data(), this->back_story().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(434)) goto parse_event1;
        break;
      }

      // required string event1 = 54;
      case 54: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event1().data(), this->event1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(442)) goto parse_event2;
        break;
      }

      // required string event2 = 55;
      case 55: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event2().data(), this->event2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(450)) goto parse_event3;
        break;
      }

      // required string event3 = 56;
      case 56: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event3().data(), this->event3().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(458)) goto parse_event4;
        break;
      }

      // required string event4 = 57;
      case 57: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event4().data(), this->event4().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(466)) goto parse_event5;
        break;
      }

      // required string event5 = 58;
      case 58: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event5().data(), this->event5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(474)) goto parse_event6;
        break;
      }

      // required string event6 = 59;
      case 59: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event6().data(), this->event6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(482)) goto parse_event7;
        break;
      }

      // required string event7 = 60;
      case 60: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event7()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event7().data(), this->event7().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(490)) goto parse_event8;
        break;
      }

      // required string event8 = 61;
      case 61: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event8()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event8().data(), this->event8().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(498)) goto parse_event9;
        break;
      }

      // required string event9 = 62;
      case 62: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event9:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event9()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event9().data(), this->event9().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(506)) goto parse_event10;
        break;
      }

      // required string event10 = 63;
      case 63: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_event10:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event10()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event10().data(), this->event10().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void story::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 progress = 52;
  if (has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(52, this->progress(), output);
  }

  // required string back_story = 53;
  if (has_back_story()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->back_story().data(), this->back_story().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      53, this->back_story(), output);
  }

  // required string event1 = 54;
  if (has_event1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event1().data(), this->event1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      54, this->event1(), output);
  }

  // required string event2 = 55;
  if (has_event2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event2().data(), this->event2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      55, this->event2(), output);
  }

  // required string event3 = 56;
  if (has_event3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event3().data(), this->event3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      56, this->event3(), output);
  }

  // required string event4 = 57;
  if (has_event4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event4().data(), this->event4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      57, this->event4(), output);
  }

  // required string event5 = 58;
  if (has_event5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event5().data(), this->event5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      58, this->event5(), output);
  }

  // required string event6 = 59;
  if (has_event6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event6().data(), this->event6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      59, this->event6(), output);
  }

  // required string event7 = 60;
  if (has_event7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event7().data(), this->event7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      60, this->event7(), output);
  }

  // required string event8 = 61;
  if (has_event8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event8().data(), this->event8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      61, this->event8(), output);
  }

  // required string event9 = 62;
  if (has_event9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event9().data(), this->event9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      62, this->event9(), output);
  }

  // required string event10 = 63;
  if (has_event10()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event10().data(), this->event10().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      63, this->event10(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* story::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 progress = 52;
  if (has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(52, this->progress(), target);
  }

  // required string back_story = 53;
  if (has_back_story()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->back_story().data(), this->back_story().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        53, this->back_story(), target);
  }

  // required string event1 = 54;
  if (has_event1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event1().data(), this->event1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        54, this->event1(), target);
  }

  // required string event2 = 55;
  if (has_event2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event2().data(), this->event2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        55, this->event2(), target);
  }

  // required string event3 = 56;
  if (has_event3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event3().data(), this->event3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        56, this->event3(), target);
  }

  // required string event4 = 57;
  if (has_event4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event4().data(), this->event4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        57, this->event4(), target);
  }

  // required string event5 = 58;
  if (has_event5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event5().data(), this->event5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        58, this->event5(), target);
  }

  // required string event6 = 59;
  if (has_event6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event6().data(), this->event6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        59, this->event6(), target);
  }

  // required string event7 = 60;
  if (has_event7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event7().data(), this->event7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        60, this->event7(), target);
  }

  // required string event8 = 61;
  if (has_event8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event8().data(), this->event8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        61, this->event8(), target);
  }

  // required string event9 = 62;
  if (has_event9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event9().data(), this->event9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        62, this->event9(), target);
  }

  // required string event10 = 63;
  if (has_event10()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event10().data(), this->event10().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        63, this->event10(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int story::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 progress = 52;
    if (has_progress()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->progress());
    }

    // required string back_story = 53;
    if (has_back_story()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->back_story());
    }

    // required string event1 = 54;
    if (has_event1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event1());
    }

    // required string event2 = 55;
    if (has_event2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event2());
    }

    // required string event3 = 56;
    if (has_event3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event3());
    }

    // required string event4 = 57;
    if (has_event4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event4());
    }

    // required string event5 = 58;
    if (has_event5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event5());
    }

    // required string event6 = 59;
    if (has_event6()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event6());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string event7 = 60;
    if (has_event7()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event7());
    }

    // required string event8 = 61;
    if (has_event8()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event8());
    }

    // required string event9 = 62;
    if (has_event9()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event9());
    }

    // required string event10 = 63;
    if (has_event10()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event10());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void story::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const story* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const story*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void story::MergeFrom(const story& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_progress()) {
      set_progress(from.progress());
    }
    if (from.has_back_story()) {
      set_back_story(from.back_story());
    }
    if (from.has_event1()) {
      set_event1(from.event1());
    }
    if (from.has_event2()) {
      set_event2(from.event2());
    }
    if (from.has_event3()) {
      set_event3(from.event3());
    }
    if (from.has_event4()) {
      set_event4(from.event4());
    }
    if (from.has_event5()) {
      set_event5(from.event5());
    }
    if (from.has_event6()) {
      set_event6(from.event6());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_event7()) {
      set_event7(from.event7());
    }
    if (from.has_event8()) {
      set_event8(from.event8());
    }
    if (from.has_event9()) {
      set_event9(from.event9());
    }
    if (from.has_event10()) {
      set_event10(from.event10());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void story::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void story::CopyFrom(const story& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool story::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fff) != 0x00000fff) return false;

  return true;
}

void story::Swap(story* other) {
  if (other != this) {
    std::swap(progress_, other->progress_);
    std::swap(back_story_, other->back_story_);
    std::swap(event1_, other->event1_);
    std::swap(event2_, other->event2_);
    std::swap(event3_, other->event3_);
    std::swap(event4_, other->event4_);
    std::swap(event5_, other->event5_);
    std::swap(event6_, other->event6_);
    std::swap(event7_, other->event7_);
    std::swap(event8_, other->event8_);
    std::swap(event9_, other->event9_);
    std::swap(event10_, other->event10_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata story::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = story_descriptor_;
  metadata.reflection = story_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RPG

// @@protoc_insertion_point(global_scope)
